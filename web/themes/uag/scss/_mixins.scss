@import "vars";
@import "breakpoints";

@mixin media($breakpoint) {
  @if map-has-key($drupal-breakpoints, $breakpoint) {
    $query: map-get($drupal-breakpoints, $breakpoint);

    @media #{$query} {
      @content;
    }
  }

  @else {
    @media #{$breakpoint} {
      @content;
    }
  }
}

@mixin fullWidth() {
  width: 100vw;
  margin-left: calc(-50vw + 50%);

  .uag-debug & {
    width: 100%;
    margin-left: initial;
    background-color: tomato !important;
  }
}

@mixin container() {
  width: 100%;
  max-width: 70rem;
  margin-left: auto;
  margin-right: auto;

  body.uag-debug & {
    background: susy-svg-grid() no-repeat scroll;
  }
}

@mixin reset-appearance {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border: 0 none;
  background: transparent;
  padding: 0;
  margin: 0;
  line-height: inherit;
}

@mixin button($color, $bg_color, $border_color_swap: false) {
  @include reset-appearance;

  border: 1px solid if($border_color_swap, $bg_color, $color);
  color: $color;
  background-color: $bg_color;
  text-transform: uppercase;
  text-decoration: none;
  text-align: center;
  padding: .5em .5em;
  display: inline-block;

  &:hover {
    background-color: $color;
    color: $bg_color;
    //border: 1px solid if($border_color_swap, $color, $bg_color);
  }
}

@mixin button-primary() {
  @include button($c_primary, $c_white);
}

@mixin button-white() {
  @include button($c_white, $c_primary);
}

$asset-base-path: '..' !default;

@function asset($type, $file) {
  @return url($asset-base-path + '/' + $type + '/' + $file);
}

@function image($file) {
  @return asset('images', $file);
}

@function font($file) {
  @return asset('fonts', $file);
}


